{"version":3,"sources":["redux/types.js","redux/actions/favoritesActions.js","components/FavoriteToggle.js","containers/CurrentWeatherContainer.js","assets/consts.js","redux/actions/navigateAction.js","modules/accuWeatherUrl.js","components/WeatherCard.js","redux/actions/apiActions.js","components/AutoCompleteInput.js","pages/Main.js","pages/Favorites.js","components/NavBar.js","App.js","redux/reducers/favoritesReducer.js","redux/reducers/apiReducer.js","redux/reducers/navigateReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["GET_CURRENT_LOCATION","GET_CURRENT_WEATHER","GET_FIVE_DAYS_FORECAST","ADD_TO_FAVORITE_LIST","REMOVE_FROM_FAVORITE_LIST","NAVIGATE_TO_FAVORITE_SCREEN","NAVIGATE_TO_HOME_SCREEN","addToFavoriteList","weatherLocation","type","payload","removeFromFavoriteList","useStyles","makeStyles","root","border","borderRadius","FavoriteToggle","isFavorite","onToggle","classes","useState","selected","setSelected","useEffect","Box","ToggleButton","className","value","onChange","event","stopPropagation","color","theme","padding","backgroundColor","paper","control","header","title","fontSize","fontWeight","subTitle","palette","grey","marginLeft","temperature","primary","main","imageContainer","paddingRight","image","width","CurrentWeather","currentWeather","fiveDaysForecast","setIsFavorite","dispatch","useDispatch","checkIfFavorite","localStorage","getItem","id","Paper","elevation","component","display","src","icon","alt","flexGrow","weatherText","TEL_AVIV","LOCATION_ERROR","navigateToHomeScreen","defaultWeatherLocation","accuWeather","API_KEY","baseUrl","autocomplete","country","currentLocation","locationKey","filesUrl","useStyle","height","alignItems","cursor","boxShadow","shadows","breakpoints","down","justifyContent","paddingLeft","up","flexDirection","flex","textAlign","deleteBtn","from","opacity","transform","to","fadeOutAnimation","animation","animationDuration","animationFillMode","WeatherCard","item","isCurrentWeatherLoaded","setIsCurrentWeatherLoaded","fadeOut","setFadeOut","WeatherIcon","accuWeatherUrl","clsx","disabled","onAnimationEnd","onClick","CircularProgress","Button","variant","button","startIcon","Delete","e","fetchCurrentLocation","cityName","a","axios","get","then","res","data","toast","catch","err","response","request","marginBottom","AutoComplete","setLocation","open","setOpen","options","setOptions","term","setTerm","loading","length","onSearchSubmit","toLowerCase","onInputChange","searchTerm","target","textValidation","text","trimmedText","replace","validator","isAlpha","fetch","json","countries","Object","keys","map","key","Autocomplete","onClose","LocalizedName","getOptionSelected","option","getOptionLabel","renderInput","params","onSubmit","TextField","textField","label","InputProps","endAdornment","Fragment","size","gridGap","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","search","gridArea","current","card1","card2","card3","card4","card5","Main","defaultLocation","currentLocationResponse","useSelector","state","apiReducer","currentWeatherResponse","fiveDaysForecastResponse","currentWeatherObject","setCurrentWeatherObject","fiveDaysForecastArray","setFiveDaysForecastArray","currentWeatherLoaded","setCurrentWeatherLoaded","fiveDaysForecastLoaded","setFiveDaysForecastLoaded","locationSearchTerm","setLocationSearchTerm","isLoading","setIsLoading","undefined","Key","DailyForecasts","fetchFiveDaysForecast","buildCurrentWeatherObject","buildFiveDaysForecastArray","EnglishName","Temperature","Metric","Value","WeatherText","dailyForecastsArray","i","push","convertDateToShortDayName","Date","convertAndRoundFahrenheit","Maximum","Day","Icon","IconPhrase","fahrenheit","celsiusTemp","Math","ceil","round","date","moment","format","substring","MainContent","AutoCompleteInput","CurrentWeatherContainer","index","Loading","gridAutoFlow","Favorites","favoritesReducer","favoritesList","setFavoritesList","position","TabPanel","props","children","other","role","hidden","aria-labelledby","p","Typography","a11yProps","NavigationContainer","navigateReducer","React","setValue","setDefaultLocation","navigationIndex","defaultWeatherCountry","AppBar","Tabs","indicatorColor","newValue","aria-label","Tab","background","backgroundAttachment","backgroundSize","App","entries","JSON","parse","CssBaseline","NavBar","initialState","action","indexOf","setItem","stringify","newWeatherList","filter","removeItem","rootReducers","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cf314db.chunk.js","sourcesContent":["export const GET_CURRENT_LOCATION = \"GET_CURRENT_LOCATION\";\r\nexport const GET_CURRENT_WEATHER = \"GET_CURRENT_WEATHER\";\r\nexport const GET_FIVE_DAYS_FORECAST = \"GET_FIVE_DAYS_FORECAST\";\r\nexport const ADD_TO_FAVORITE_LIST = \"ADD_TO_FAVORITE_LIST\";\r\nexport const REMOVE_FROM_FAVORITE_LIST = \"REMOVE_FROM_FAVORITE_LIST\";\r\nexport const ADD_FAVORITE_CURRENT_WEATHER = \"ADD_FAVORITE_CURRENT_WEATHER\";\r\nexport const NAVIGATE_TO_FAVORITE_SCREEN = \"NAVIGATE_TO_FAVORITE_SCREEN\";\r\nexport const NAVIGATE_TO_HOME_SCREEN = \"NAVIGATE_TO_HOME_SCREEN\";\r\n","import { ADD_TO_FAVORITE_LIST, REMOVE_FROM_FAVORITE_LIST } from \"../types\";\r\n\r\nexport const addToFavoriteList = (weatherLocation) => {\r\n  return {\r\n    type: ADD_TO_FAVORITE_LIST,\r\n    payload: weatherLocation,\r\n  };\r\n};\r\n\r\nexport const removeFromFavoriteList = (weatherLocation) => {\r\n  return {\r\n    type: REMOVE_FROM_FAVORITE_LIST,\r\n    payload: weatherLocation,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    border: \"none\",\r\n    borderRadius: \"50%\",\r\n  },\r\n});\r\n\r\nconst FavoriteToggle = ({ isFavorite, onToggle }) => {\r\n  const classes = useStyles();\r\n  const [selected, setSelected] = useState(isFavorite);\r\n\r\n  useEffect(() => {\r\n    setSelected(isFavorite);\r\n  }, [isFavorite]);\r\n\r\n  const onChange = (event) => {\r\n    event.stopPropagation();\r\n    setSelected(!selected);\r\n    onToggle(selected);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <ToggleButton\r\n        className={classes.root}\r\n        value=\"check\"\r\n        selected={selected}\r\n        onChange={onChange}\r\n      >\r\n        {selected ? <FavoriteIcon color=\"secondary\" /> : <FavoriteBorderIcon />}\r\n      </ToggleButton>\r\n    </Box>\r\n  );\r\n};\r\nexport default FavoriteToggle;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Paper } from \"@material-ui/core\";\r\nimport FavoriteToggle from \"../components/FavoriteToggle\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addToFavoriteList,\r\n  removeFromFavoriteList,\r\n} from \"../redux/actions/favoritesActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"1em\",\r\n    backgroundColor: \"rgba(255,255,255,0.8)\",\r\n    borderRadius: \"1em\",\r\n  },\r\n  paper: {},\r\n  control: {\r\n    padding: \"1em\",\r\n  },\r\n\r\n  header: {},\r\n  title: {\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  subTitle: {\r\n    fontSize: \"1rem\",\r\n    color: theme.palette.grey[400],\r\n    marginLeft: \"1\",\r\n  },\r\n\r\n  temperature: {\r\n    fontSize: \"3rem\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  imageContainer: {\r\n    paddingRight: \"1em\",\r\n  },\r\n\r\n  image: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst CurrentWeather = ({ currentWeather, fiveDaysForecast }) => {\r\n  const classes = useStyles();\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    checkIfFavorite();\r\n  }, []);\r\n\r\n  const onFavoriteToggle = () => {\r\n    setIsFavorite(!isFavorite);\r\n\r\n    !isFavorite\r\n      ? dispatch(addToFavoriteList(currentWeather))\r\n      : dispatch(removeFromFavoriteList(currentWeather.id));\r\n  };\r\n\r\n  const checkIfFavorite = () => {\r\n    if (localStorage.getItem(currentWeather.id)) {\r\n      setIsFavorite(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={0}>\r\n      <Box component=\"span\" display=\"flex\">\r\n        <Box className={classes.imageContainer}>\r\n          <img\r\n            className={classes.image}\r\n            src={`https://developer.accuweather.com/sites/default/files/${\r\n              currentWeather.icon < 10 ? \"0\" : \"\"\r\n            }${currentWeather.icon}-s.png`}\r\n            alt=\"weather-icon\"\r\n          />\r\n        </Box>\r\n        <Box flexGrow={1}>\r\n          <Box className={classes.header}>\r\n            <Box className={classes.title}>{currentWeather.title}</Box>\r\n            <Box className={classes.subTitle}>{currentWeather.weatherText}</Box>\r\n          </Box>\r\n\r\n          <Box className={classes.temperature}>\r\n            {currentWeather.temperature}\r\n          </Box>\r\n        </Box>\r\n        {<FavoriteToggle isFavorite={isFavorite} onToggle={onFavoriteToggle} />}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","export const TEL_AVIV = \"tel aviv\";\r\nexport const CELCIUS_SIGN = \"C°\";\r\nexport const FAHRENHEIT_SIGN = \"F°\";\r\nexport const LOCATION_ERROR = \"oops something went wrong...\";\r\nexport const LOCATION_NOT_FOUND = \"Location not found\";\r\nexport const SEARCH_IN_ENGLISH = \"Please search in English only\";\r\n","import { NAVIGATE_TO_HOME_SCREEN, NAVIGATE_TO_FAVORITE_SCREEN } from \"../types\";\r\n\r\nexport const navigateToHomeScreen = (defaultWeatherLocation) => {\r\n  return {\r\n    type: NAVIGATE_TO_HOME_SCREEN,\r\n    payload: defaultWeatherLocation,\r\n  };\r\n};\r\n\r\nexport const navigateToFavoritesScreen = () => {\r\n  return {\r\n    type: NAVIGATE_TO_FAVORITE_SCREEN,\r\n  };\r\n};\r\n","const accuWeather = (() => {\r\n  const API_KEY = \"x2dmVGjpIs6zdsvJI7GdtjEThGEfBYnp\";\r\n  const baseUrl = \"https://dataservice.accuweather.com\";\r\n  const filesUrl = \"https://developer.accuweather.com/sites/default/files/\";\r\n\r\n  function autocomplete(country) {\r\n    const url = `${baseUrl}/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${country}`;\r\n    return url;\r\n  }\r\n\r\n  function currentLocation(country) {\r\n    const url = `${baseUrl}/locations/v1/cities/search?apikey=${API_KEY}&q=${country}`;\r\n    return url;\r\n  }\r\n\r\n  function currentWeather(locationKey) {\r\n    const url = `${baseUrl}/currentconditions/v1/${locationKey}?apikey=${API_KEY}`;\r\n    return url;\r\n  }\r\n\r\n  function fiveDaysForecast(locationKey) {\r\n    const url = `${baseUrl}/forecasts/v1/daily/5day/${locationKey}?apikey=${API_KEY}`;\r\n    return url;\r\n  }\r\n\r\n  return {\r\n    autocomplete,\r\n    currentLocation,\r\n    currentWeather,\r\n    fiveDaysForecast,\r\n    filesUrl,\r\n  };\r\n})();\r\n\r\nexport default accuWeather;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport { navigateToHomeScreen } from \"../redux/actions/navigateAction\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport accuWeatherUrl from \"../modules/accuWeatherUrl\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    cursor: (isFavorite) => (isFavorite ? \"pointer\" : null),\r\n    backgroundColor: \"rgba(255,255,255,0.8)\",\r\n    borderRadius: \"1em\",\r\n    \"&:hover\": {\r\n      boxShadow: (isFavorite) => (isFavorite ? theme.shadows[4] : null),\r\n    },\r\n    padding: \"1em\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      justifyContent: \"space-between\",\r\n      paddingLeft: \"1em\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n      alignItems: \"left\",\r\n    },\r\n  },\r\n\r\n  header: {\r\n    alignItems: \"left\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n\r\n  title: {\r\n    fontSize: \"1.3rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  subTitle: {\r\n    fontSize: \"0.9rem\",\r\n    color: theme.palette.grey[500],\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  deleteBtn: {\r\n    padding: \"1em\",\r\n  },\r\n\r\n  image: {\r\n    padding: \"1em\",\r\n  },\r\n\r\n  \"@keyframes fadeOut\": {\r\n    from: {\r\n      opacity: 1,\r\n      transform: \"scale(1)\",\r\n    },\r\n    to: {\r\n      opacity: 0,\r\n      transform: \"scale(0)\",\r\n    },\r\n  },\r\n\r\n  fadeOutAnimation: {\r\n    animation: \"$fadeOut\",\r\n    animationDuration: \"500ms\",\r\n    animationFillMode: \"forwards\",\r\n  },\r\n}));\r\n\r\nconst WeatherCard = ({ item, isFavorite, onToggle }) => {\r\n  const classes = useStyle(isFavorite);\r\n  const [isCurrentWeatherLoaded, setIsCurrentWeatherLoaded] = useState(false);\r\n  const [fadeOut, setFadeOut] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setIsCurrentWeatherLoaded(true);\r\n  }, [item]);\r\n\r\n  const WeatherIcon = () => {\r\n    return (\r\n      <img\r\n        width={\"100%\"}\r\n        alt=\"weather-icon\"\r\n        src={`${accuWeatherUrl.filesUrl}${item.icon < 10 ? \"0\" : \"\"}${\r\n          item.icon\r\n        }-s.png`}\r\n      />\r\n    );\r\n  };\r\n\r\n  const onClickHandler = (e) => {\r\n    e.stopPropagation();\r\n    setFadeOut(true);\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      className={clsx(classes.root, fadeOut && classes.fadeOutAnimation)}\r\n      elevation={0}\r\n      disabled={!isFavorite}\r\n      onAnimationEnd={() => {\r\n        onToggle(item.id);\r\n      }}\r\n      onClick={() => {\r\n        dispatch(navigateToHomeScreen(item.title));\r\n      }}\r\n    >\r\n      <Box className={classes.header}>\r\n        <Box className={classes.title}>{item.title}</Box>\r\n        <Box className={classes.subTitle}>{item.weatherText}</Box>\r\n      </Box>\r\n\r\n      <Box className={classes.image}>\r\n        {isCurrentWeatherLoaded ? <WeatherIcon /> : <CircularProgress />}\r\n      </Box>\r\n\r\n      <Box className={classes.title}>{item.temperature}</Box>\r\n\r\n      {isFavorite && (\r\n        <div className={classes.deleteBtn}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n            startIcon={<Delete />}\r\n            onClick={onClickHandler}\r\n          >\r\n            delete\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\nexport default WeatherCard;\r\n","import {\r\n  GET_CURRENT_LOCATION,\r\n  GET_CURRENT_WEATHER,\r\n  GET_FIVE_DAYS_FORECAST,\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nimport { LOCATION_ERROR, LOCATION_NOT_FOUND } from \"../../assets/consts\";\r\nimport toast from \"react-simple-toasts\";\r\nimport accuWeatherUrl from \"../../modules/accuWeatherUrl\";\r\n\r\nexport const fetchCurrentLocation = (cityName) => {\r\n  return async (dispatch) => {\r\n    return axios\r\n      .get(accuWeatherUrl.currentLocation(cityName))\r\n      .then((res) => {\r\n        if (res.data[0]) {\r\n          dispatch({\r\n            type: GET_CURRENT_LOCATION,\r\n            payload: res.data[0],\r\n          });\r\n        } else {\r\n          toast(LOCATION_NOT_FOUND);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          // client received an error response (5xx, 4xx)\r\n          toast(LOCATION_ERROR + \"\\n\" + err.response);\r\n        } else if (err.request) {\r\n          // client never received a response, or request never left\r\n          toast(LOCATION_ERROR);\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchCurrentWeather = (locationKey) => {\r\n  return async (dispatch) => {\r\n    return axios\r\n      .get(accuWeatherUrl.currentWeather(locationKey))\r\n      .then((res) => {\r\n        dispatch({\r\n          type: GET_CURRENT_WEATHER,\r\n          payload: res.data[0],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          // client received an error response (5xx, 4xx)\r\n          toast(LOCATION_ERROR + \"\\n\" + err.response);\r\n        } else if (err.request) {\r\n          // client never received a response, or request never left\r\n          toast(LOCATION_ERROR);\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchFiveDaysForecast = (locationKey) => {\r\n  return async (dispatch) => {\r\n    return axios\r\n      .get(accuWeatherUrl.fiveDaysForecast(locationKey))\r\n      .then((res) => {\r\n        dispatch({\r\n          type: GET_FIVE_DAYS_FORECAST,\r\n          payload: res.data.DailyForecasts,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          // client received an error response (5xx, 4xx)\r\n          toast(LOCATION_ERROR + \"\\n\" + err.response);\r\n        } else if (err.request) {\r\n          // client never received a response, or request never left\r\n          toast(LOCATION_ERROR);\r\n        }\r\n      });\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport accuWeatherUrl from \"../modules/accuWeatherUrl\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport fetch from \"cross-fetch\";\r\nimport toast from \"react-simple-toasts\";\r\nimport validator from \"validator\";\r\nimport { TextField, CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport { SEARCH_IN_ENGLISH } from \"../assets/consts\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    marginBottom: \"1em\",\r\n  },\r\n});\r\n\r\nconst AutoComplete = ({ setLocation }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  const loading = open && options.length === 0;\r\n\r\n  const onSearchSubmit = () => {\r\n    setLocation(term.toLowerCase());\r\n  };\r\n\r\n  const onInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n\r\n    if (textValidation(searchTerm)) {\r\n      searchTerm ? setOpen(true) : setOpen(false);\r\n      setTerm(searchTerm);\r\n    } else {\r\n      toast(SEARCH_IN_ENGLISH, 2000);\r\n    }\r\n  };\r\n\r\n  const textValidation = (text) => {\r\n    if (!text.length) return true;\r\n    const trimmedText = text.replace(/\\s/g, \"\");\r\n    return validator.isAlpha(trimmedText);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (term) {\r\n      (async () => {\r\n        const response = await fetch(accuWeatherUrl.autocomplete(term));\r\n\r\n        const countries = await response.json();\r\n        setOptions(Object.keys(countries).map((key) => countries[key]));\r\n      })();\r\n    }\r\n  }, [term]);\r\n\r\n  useEffect(() => {\r\n    if (!open) setOptions([]);\r\n  }, [open]);\r\n\r\n  const onClose = () => {\r\n    setTerm(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} elevation={0}>\r\n      <Autocomplete\r\n        open={open}\r\n        onClose={onClose}\r\n        onChange={(event, value) => {\r\n          setLocation(value.LocalizedName.toLowerCase());\r\n        }}\r\n        getOptionSelected={(option, value) =>\r\n          option.LocalizedName === value.LocalizedName\r\n        }\r\n        getOptionLabel={(option) => option.LocalizedName}\r\n        options={options}\r\n        loading={loading}\r\n        renderInput={(params) => (\r\n          <form onSubmit={onSearchSubmit}>\r\n            <TextField\r\n              className={classes.textField}\r\n              onChange={onInputChange}\r\n              {...params}\r\n              label=\"Search for cities...\"\r\n              variant=\"standard\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <React.Fragment>\r\n                    {loading ? (\r\n                      <CircularProgress color=\"inherit\" size={20} />\r\n                    ) : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </React.Fragment>\r\n                ),\r\n              }}\r\n            />\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport CurrentWeatherContainer from \"../containers/CurrentWeatherContainer\";\r\nimport { CELCIUS_SIGN } from \"../assets/consts\";\r\nimport moment from \"moment\";\r\nimport WeatherCard from \"../components/WeatherCard\";\r\n\r\nimport {\r\n  fetchCurrentLocation,\r\n  fetchCurrentWeather,\r\n  fetchFiveDaysForecast,\r\n} from \"../redux/actions/apiActions\";\r\n\r\nimport { navigateToHomeScreen } from \"../redux/actions/navigateAction\";\r\n\r\nimport AutoCompleteInput from \"../components/AutoCompleteInput\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"grid\",\r\n    gridGap: \"1rem\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      gridTemplateColumns: \"1fr\",\r\n      gridTemplateRows: \"auto\",\r\n      gridTemplateAreas: `\"search\" \"current \" \"card1\" \"card2\" \"card3\" \"card4\" \"card5\"`,\r\n    },\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      gridTemplateColumns: \"repeat(5, 1fr)\",\r\n      gridTemplateRows: \"auto\",\r\n      gridTemplateAreas: `\"search search search search search\"\r\n                          \"current current current current current\"\r\n                          \"card1 card2 card3 card4 card5\"`,\r\n    },\r\n  },\r\n\r\n  search: {\r\n    gridArea: \"search\",\r\n  },\r\n  current: {\r\n    gridArea: \"current\",\r\n  },\r\n  card1: {\r\n    gridArea: \"card1\",\r\n  },\r\n  card2: {\r\n    gridArea: \"card2\",\r\n  },\r\n  card3: {\r\n    gridArea: \"card3\",\r\n  },\r\n  card4: {\r\n    gridArea: \"card4\",\r\n  },\r\n  card5: {\r\n    gridArea: \"card5\",\r\n  },\r\n}));\r\n\r\nconst Main = ({ defaultLocation }) => {\r\n  const { currentLocationResponse } = useSelector((state) => state.apiReducer);\r\n  const { currentWeatherResponse } = useSelector((state) => state.apiReducer);\r\n  const { fiveDaysForecastResponse } = useSelector((state) => state.apiReducer);\r\n\r\n  const [currentWeatherObject, setCurrentWeatherObject] = useState({});\r\n  const [fiveDaysForecastArray, setFiveDaysForecastArray] = useState({});\r\n\r\n  const [currentWeatherLoaded, setCurrentWeatherLoaded] = useState(false);\r\n  const [fiveDaysForecastLoaded, setFiveDaysForecastLoaded] = useState(false);\r\n\r\n  const [locationSearchTerm, setLocationSearchTerm] = useState(defaultLocation);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateToHomeScreen(locationSearchTerm));\r\n    dispatch(fetchCurrentLocation(defaultLocation));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      currentLocationResponse !== undefined &&\r\n      currentLocationResponse.length !== 0\r\n    ) {\r\n      dispatch(fetchCurrentWeather(currentLocationResponse.Key));\r\n      dispatch(fetchFiveDaysForecast(currentLocationResponse.Key));\r\n    }\r\n  }, [currentLocationResponse]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      currentWeatherResponse !== undefined &&\r\n      currentWeatherResponse.length !== 0\r\n    ) {\r\n      buildCurrentWeatherObject();\r\n    }\r\n  }, [currentWeatherResponse]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      fiveDaysForecastResponse !== undefined &&\r\n      fiveDaysForecastResponse.length !== 0\r\n    ) {\r\n      buildFiveDaysForecastArray();\r\n    }\r\n  }, [fiveDaysForecastResponse]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentLocation(locationSearchTerm));\r\n  }, [locationSearchTerm]);\r\n\r\n  const buildCurrentWeatherObject = () => {\r\n    const currentWeatherObject = {\r\n      id: currentLocationResponse.Key,\r\n      title: currentLocationResponse.EnglishName,\r\n      temperature:\r\n        currentWeatherResponse.Temperature.Metric.Value + CELCIUS_SIGN,\r\n      icon: currentWeatherResponse.WeatherIcon,\r\n      weatherText: currentWeatherResponse.WeatherText,\r\n    };\r\n    setCurrentWeatherObject(currentWeatherObject);\r\n    setCurrentWeatherLoaded(true);\r\n  };\r\n\r\n  const buildFiveDaysForecastArray = () => {\r\n    let dailyForecastsArray = [];\r\n\r\n    for (let i in fiveDaysForecastResponse) {\r\n      dailyForecastsArray.push({\r\n        id: i,\r\n        title: convertDateToShortDayName(fiveDaysForecastResponse[i].Date),\r\n        temperature: convertAndRoundFahrenheit(\r\n          fiveDaysForecastResponse[i].Temperature.Maximum.Value\r\n        ),\r\n        icon: fiveDaysForecastResponse[i].Day.Icon,\r\n        weatherText: fiveDaysForecastResponse[i].Day.IconPhrase,\r\n      });\r\n    }\r\n\r\n    setFiveDaysForecastArray(dailyForecastsArray);\r\n\r\n    setCurrentWeatherLoaded(true);\r\n    setFiveDaysForecastLoaded(true);\r\n    if (isLoading) setIsLoading(false);\r\n  };\r\n\r\n  const convertAndRoundFahrenheit = (fahrenheit) => {\r\n    const celsiusTemp = ((fahrenheit - 32) * 5) / 9;\r\n    return Math.ceil(Math.round(celsiusTemp * 10) / 10) + CELCIUS_SIGN;\r\n  };\r\n\r\n  const convertDateToShortDayName = (date) => {\r\n    return moment(date).format(\"dddd\").substring(0, 3);\r\n  };\r\n\r\n  const setLocation = (searchTerm) => {\r\n    setIsLoading(true);\r\n    setLocationSearchTerm(searchTerm);\r\n  };\r\n\r\n  const MainContent = () => {\r\n    const classes = useStyle();\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.search}>\r\n          <AutoCompleteInput setLocation={setLocation} />\r\n        </div>\r\n\r\n        <div className={classes.current}>\r\n          <CurrentWeatherContainer currentWeather={currentWeatherObject} />\r\n        </div>\r\n\r\n        {fiveDaysForecastArray.map((item, index) => (\r\n          <div key={item.id} className={classes[`card${index + 1}`]}>\r\n            <WeatherCard item={item} isFavorite={false} onToggle={() => {}} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Loading = () => {\r\n    return (\r\n      <div display={\"flex\"}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return currentWeatherLoaded && fiveDaysForecastLoaded && !isLoading ? (\r\n    <MainContent />\r\n  ) : (\r\n    <Loading />\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport WeatherCard from \"../components/WeatherCard\";\r\nimport { removeFromFavoriteList } from \"../redux/actions/favoritesActions\";\r\nimport { navigateToFavoritesScreen } from \"../redux/actions/navigateAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"grid\",\r\n    gridGap: \"1rem\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      gridTemplateColumns: \"1fr\",\r\n      gridAutoFlow: \"rows\",\r\n    },\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      gridTemplateColumns: \"repeat(5, 1fr)\",\r\n      gridTemplateRows: \"repeat(5, 1fr)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Favorites = () => {\r\n  const classes = useStyles();\r\n  const favoritesReducer = useSelector((state) => state.favoritesReducer);\r\n  const [favoritesList, setFavoritesList] = useState(favoritesReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateToFavoritesScreen());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFavoritesList(favoritesReducer);\r\n  }, [favoritesReducer]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {favoritesList.map((item) => (\r\n        <WeatherCard\r\n          key={item.id}\r\n          item={item}\r\n          isFavorite\r\n          onToggle={(key) => dispatch(removeFromFavoriteList(key))}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Main from \"../pages/Main\";\r\nimport Favorites from \"../pages/Favorites\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { TEL_AVIV } from \"../assets/consts\";\r\nimport {\r\n  makeStyles,\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"static\",\r\n  },\r\n});\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-prevent-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component={\"span\"}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-prevent-tab-${index}`,\r\n    \"aria-controls\": `scrollable-prevent-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst NavigationContainer = () => {\r\n  const classes = useStyles();\r\n  const navigateReducer = useSelector((state) => state.navigateReducer);\r\n  const [value, setValue] = React.useState(0);\r\n  const [defaultLocation, setDefaultLocation] = React.useState(TEL_AVIV);\r\n\r\n  useEffect(() => {\r\n    if (value && !navigateReducer.navigationIndex) {\r\n      setDefaultLocation(navigateReducer.defaultWeatherCountry);\r\n      setValue(0);\r\n    }\r\n  }, [navigateReducer]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <AppBar className={classes.root}>\r\n        <Tabs\r\n          value={value}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleChange}\r\n          aria-label=\"disabled tabs example\"\r\n        >\r\n          <Tab label=\"home\" {...a11yProps(0)} />\r\n          <Tab label=\"favorites\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <TabPanel\r\n        value={value}\r\n        index={0}\r\n        children={<Main defaultLocation={defaultLocation} />}\r\n      />\r\n      <TabPanel value={value} index={1} children={<Favorites />} />\r\n    </Box>\r\n  );\r\n};\r\nexport default NavigationContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToFavoriteList } from \"./redux/actions/favoritesActions\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport { CssBaseline, makeStyles, Box } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    background:\r\n      \"url(https://images.unsplash.com/photo-1517483000871-1dbf64a6e1c6) no-repeat\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundSize: \"cover\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: \"100vh\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    for (let [, value] of Object.entries(localStorage)) {\r\n      dispatch(addToFavoriteList(JSON.parse(value)));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <Box className={classes.root}>\r\n        <NavBar />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ADD_TO_FAVORITE_LIST, REMOVE_FROM_FAVORITE_LIST } from \"../types\";\r\n\r\nconst initialState = [];\r\n\r\nconst favoritesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_FAVORITE_LIST: {\r\n      if (state.indexOf(action.payload) === -1) state.push(action.payload);\r\n\r\n      // Add location key and city name in localStorage\r\n      localStorage.setItem(action.payload.id, JSON.stringify(action.payload));\r\n\r\n      return state;\r\n    }\r\n\r\n    case REMOVE_FROM_FAVORITE_LIST: {\r\n      const newWeatherList = state.filter((item) => item.id !== action.payload);\r\n      state = newWeatherList;\r\n\r\n      // Remove location key and city name from localStorage\r\n      localStorage.removeItem(action.payload);\r\n      return state;\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default favoritesReducer;\r\n","import {\r\n  GET_CURRENT_LOCATION,\r\n  GET_CURRENT_WEATHER,\r\n  GET_FIVE_DAYS_FORECAST,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  currentLocationResponse: [],\r\n  currentWeatherResponse: [],\r\n  fiveDaysForecastResponse: [],\r\n};\r\n\r\nconst apiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CURRENT_LOCATION: {\r\n      return {\r\n        ...state,\r\n        currentLocationResponse: action.payload,\r\n      };\r\n    }\r\n    case GET_CURRENT_WEATHER: {\r\n      return {\r\n        ...state,\r\n        currentWeatherResponse: action.payload,\r\n      };\r\n    }\r\n    case GET_FIVE_DAYS_FORECAST: {\r\n      return {\r\n        ...state,\r\n        fiveDaysForecastResponse: action.payload,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default apiReducer;\r\n","import { TEL_AVIV } from \"../../assets/consts\";\r\nimport { NAVIGATE_TO_HOME_SCREEN, NAVIGATE_TO_FAVORITE_SCREEN } from \"../types\";\r\n\r\nconst initialState = {\r\n  navigationIndex: 0,\r\n  defaultWeatherCountry: TEL_AVIV,\r\n};\r\nconst navigateReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case NAVIGATE_TO_HOME_SCREEN: {\r\n      return {\r\n        ...state,\r\n        navigationIndex: 0,\r\n        defaultWeatherCountry: action.payload,\r\n      };\r\n    }\r\n\r\n    case NAVIGATE_TO_FAVORITE_SCREEN: {\r\n      return {\r\n        ...state,\r\n        navigationIndex: 1,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default navigateReducer;\r\n","import favoritesReducer from \"./favoritesReducer\";\r\nimport apiReducer from \"./apiReducer\";\r\nimport navigateReducer from \"./navigateReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducers = combineReducers({\r\n  favoritesReducer,\r\n  apiReducer,\r\n  navigateReducer,\r\n});\r\n\r\nexport default rootReducers;\r\n","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initalState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}